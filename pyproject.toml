[tool.poetry]
name = "pybmpmon"
version = "0.1.0"
description = "BGP Monitoring Protocol (BMP) listener and analyzer"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "pybmpmon", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
asyncpg = "^0.30.0"
pydantic = "^2.12"
pydantic-settings = "^2.0"
structlog = "^25.4"
sentry-sdk = "^2.41"
python-dotenv = "^1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0"
pytest-asyncio = "^1.2"
pytest-cov = "^4.1"
testcontainers = "^4.0"
black = "^25.9"
ruff = "^0.14"
mypy = "^1.8"
mkdocs = "^1.5"
mkdocs-material = "^9.5"

[tool.poetry.scripts]
pybmpmon = "pybmpmon.__main__:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311', 'py312', 'py313']

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers"

[tool.coverage.run]
source = ["src/pybmpmon"]
omit = ["tests/*", "src/pybmpmon/__main__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
